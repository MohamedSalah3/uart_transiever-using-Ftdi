/*
 * SPI_Config.h
 *
 * Created: 2020-02-10 10:31:57 PM
 *  Author: EbrahimOseif
 */ 


#ifndef SPI_CONFIG_H_
#define SPI_CONFIG_H_


typedef enum SPI_MASTER_SLAVE_MODE
{
	SPI_MASTER = 0x10,
	SPI_SLAVE  = 0x00
}EN_SPI_SLAVE_MODE;

typedef enum SPI_PRESCALAR
{
	SPI_Fosc4	= 0x00,
	SPI_Fosc16  = 0x01,
	SPI_Fosc64  = 0x02,
	SPI_Fosc128 = 0x03
}EN_SPI_PRESCALAR;

typedef enum SPI_ENABLE
{
	SPI_ENABLE_ON	= 0x40 ,
	SPI_ENABLE_OFF  = 0x00
}EN_SPI_ENABLE;

typedef enum SPI_DOUBLE_SPEED
{
	SPI_DOUBLE_SPEED_MODE_OFF = 0x00,
	SPI_DOUBLE_SPEED_MODE_ON  = 0x01
}EN_SPI_DOUBLE_SPEED;

typedef enum SPI_OPERATING_LEVEL
{
	SPI_IDLE_LOW  = 0x00,
	SPI_IDLE_HIGH = 0x08
}EN_SPI_OPERATING_LEVEL;

typedef enum SPI_SAMPLING_EDGE
{
	SPI_LEADING  = 0x00 ,
	SPI_TRAILING = 0x04
}EN_SPI_SAMPLING_EDGE;


typedef enum SPI_INT_ENABLE
{
	SPI_INT_OFF = 0x80,
	SPI_INT_ON	= 0x00
}EN_SPI_INT_ENABLE;

typedef enum SPI_DATA_ORDER
{
	SPI_LSB_FISRT = 0x20,
	SPI_MSB_FISRT = 0x00
}EN_SPI_DATA_ORDER;

typedef struct ST_SPI_Configuration
{
	EN_SPI_SLAVE_MODE MASTER_SLAVE_MODE ;
	EN_SPI_PRESCALAR  PRESCALAR ;
	EN_SPI_ENABLE  ENABLE;
	EN_SPI_DOUBLE_SPEED  DOUBLE_SPEED;
	EN_SPI_OPERATING_LEVEL  OPERATING_LEVEL;
	EN_SPI_SAMPLING_EDGE   SAMPLING_EDGE;
	//EN_SPI_INT_ENABLE    INT_ENABLE;
	EN_SPI_DATA_ORDER  DATA_ORDER ;
}ST_SPI_Configuration;




#endif /* SPI_CONFIG_H_ */